@mixin dotted {
  // background-image: radial-gradient($accent 30%, transparent 100%);
  background-image: repeating-linear-gradient(to bottom, transparent, transparent 3px, $accent 3px, $accent 6px),
    repeating-linear-gradient(to right, lighten($background, 30%), lighten($background, 30%) 3px, $accent 3px, $accent 6px);
  // background-position: 0 0, 2px 2px;
  // background-size: 4px 4px;
  color: $background;
}

@mixin placeholder() {
  $selector: '';
  $prefixes: (
    moz: '::-moz',
    webkit: '::-webkit',
    ie: ':-ms',
  );
  @each $prop, $value in $prefixes {
    @if $prop != 'moz' {
      $selector: #{$value}-input-placeholder;
    } @else {
      $selector: #{$value}-placeholder;
    }
    @if & {
      &#{$selector} {
        @content;
      }
    } @else {
      #{$selector} {
        @content;
      }
    }
  }
  &::placeholder {
    @content;
  }
}

@mixin center {
  color: $accent;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: auto;
  max-width: 980px;
  min-height: calc(100vh - #{4 * $GU});
}

@mixin arrow($color) {
  $ease: cubic-bezier(0.2, 1, 0.3, 1);

  svg {
    fill: $color;
    width: 2 * $GU;
    height: 2 * $GU;
    margin: 1.5 * $GU;
    overflow: visible;

    polygon,
    path {
      transition: all 0.5s $ease;
    }
  }
}

@mixin animated-arrow($color) {
  $ease: cubic-bezier(0.2, 1, 0.3, 1);

  @keyframes arrow-anim {
    0% {
      opacity: 1;
      transform: translateX(0);
    }
    5% {
      transform: translateX(-0.1rem);
    }
    100% {
      transform: translateX(1rem);
      opacity: 0;
    }
  }

  @keyframes arrow-fixed-anim {
    5% {
      opacity: 0;
    }
    20% {
      opacity: 0.4;
    }
    100% {
      opacity: 1;
    }
  }

  svg {
    fill: $color;

    polygon,
    path {
      transition: all 0.5s $ease;
    }

    .arrow {
      animation: arrow-anim 2s $ease infinite;
    }
    .arrow-fixed {
      animation: arrow-fixed-anim 2s $ease infinite;
    }
  }
}

@mixin transparent() {
  background-color: transparentize($background-subtle, 0.7);
  backdrop-filter: blur($GU);
}
